; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\i2c_user.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\i2c_user.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\user\inc -I.\RTE\Device\STM32F103C8 -I.\RTE\_Target_1 -IC:\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Arm\Packs\Keil\STM32F1xx_DFP\2.4.0\Device\Include -D__UVISION_VERSION=535 -D_RTE_ -DSTM32F10X_MD -D_RTE_ -DSTM32F103xB -DSTM32F10X_MD --omf_browse=.\objects\i2c_user.crf user\src\i2c_user.c]
                          THUMB

                          AREA ||i.I2C_Init||, CODE, READONLY, ALIGN=2

                  I2C_Init PROC
;;;30     //------------------------------------------------
;;;31     void I2C_Init(void)
000000  4838              LDR      r0,|L1.228|
;;;32     {
;;;33       //I2C1 GPIO
;;;34       SET_BIT(RCC->APB2ENR, RCC_APB2ENR_IOPBEN);
000002  6980              LDR      r0,[r0,#0x18]
000004  f0400008          ORR      r0,r0,#8
000008  4936              LDR      r1,|L1.228|
00000a  6188              STR      r0,[r1,#0x18]
;;;35       SET_BIT(GPIOB->CRL, GPIO_CRL_CNF7_1 | GPIO_CRL_CNF6_1 | GPIO_CRL_CNF7_0 | GPIO_CRL_CNF6_0 |\
00000c  4836              LDR      r0,|L1.232|
00000e  6800              LDR      r0,[r0,#0]
000010  f040407f          ORR      r0,r0,#0xff000000
000014  4934              LDR      r1,|L1.232|
000016  6008              STR      r0,[r1,#0]
;;;36                       GPIO_CRL_MODE7_1 | GPIO_CRL_MODE6_1 | GPIO_CRL_MODE7_0 | GPIO_CRL_MODE6_0);
;;;37       //RCC peripheral clock enabling
;;;38       SET_BIT(RCC->APB1ENR, RCC_APB1ENR_I2C1EN);
000018  4832              LDR      r0,|L1.228|
00001a  69c0              LDR      r0,[r0,#0x1c]
00001c  f4401000          ORR      r0,r0,#0x200000
000020  4930              LDR      r1,|L1.228|
000022  61c8              STR      r0,[r1,#0x1c]
;;;39       //Delay after an RCC peripheral clock enabling
;;;40       tmpreg1 = READ_BIT(RCC->APB1ENR, RCC_APB1ENR_I2C1EN);
000024  4608              MOV      r0,r1
000026  69c0              LDR      r0,[r0,#0x1c]
000028  f4001000          AND      r0,r0,#0x200000
00002c  492f              LDR      r1,|L1.236|
00002e  6008              STR      r0,[r1,#0]  ; tmpreg1
;;;41       //Disable  acknowledge on Own Address2 match address
;;;42       CLEAR_BIT(I2C1->OAR2, I2C_OAR2_ENDUAL);
000030  482f              LDR      r0,|L1.240|
000032  8800              LDRH     r0,[r0,#0]
000034  f0200001          BIC      r0,r0,#1
000038  492d              LDR      r1,|L1.240|
00003a  8008              STRH     r0,[r1,#0]
;;;43       //Disable General Call
;;;44       CLEAR_BIT(I2C1->CR1, I2C_CR1_ENGC);
00003c  482c              LDR      r0,|L1.240|
00003e  380c              SUBS     r0,r0,#0xc
000040  8800              LDRH     r0,[r0,#0]
000042  f0200040          BIC      r0,r0,#0x40
000046  492a              LDR      r1,|L1.240|
000048  390c              SUBS     r1,r1,#0xc
00004a  8008              STRH     r0,[r1,#0]
;;;45       //Enable Clock stretching
;;;46       CLEAR_BIT(I2C1->CR1, I2C_CR1_NOSTRETCH);
00004c  4608              MOV      r0,r1
00004e  8800              LDRH     r0,[r0,#0]
000050  f0200080          BIC      r0,r0,#0x80
000054  8008              STRH     r0,[r1,#0]
;;;47       //Disable I2C peripheral
;;;48       CLEAR_BIT(I2C1->CR1, I2C_CR1_PE);
000056  4608              MOV      r0,r1
000058  8800              LDRH     r0,[r0,#0]
00005a  f0200001          BIC      r0,r0,#1
00005e  8008              STRH     r0,[r1,#0]
;;;49       //ClockSpeed
;;;50       MODIFY_REG(I2C1->CR2, I2C_CR2_FREQ, 36);
000060  1d08              ADDS     r0,r1,#4
000062  8800              LDRH     r0,[r0,#0]
000064  f020003f          BIC      r0,r0,#0x3f
000068  f0400024          ORR      r0,r0,#0x24
00006c  1d09              ADDS     r1,r1,#4
00006e  8008              STRH     r0,[r1,#0]
;;;51       //MODIFY_REG(I2C1->TRISE, I2C_TRISE_TRISE, 36 + 1); //100
;;;52       MODIFY_REG(I2C1->TRISE, I2C_TRISE_TRISE, 11); //400
000070  481f              LDR      r0,|L1.240|
000072  3014              ADDS     r0,r0,#0x14
000074  8800              LDRH     r0,[r0,#0]
000076  f020003f          BIC      r0,r0,#0x3f
00007a  f040000b          ORR      r0,r0,#0xb
00007e  491c              LDR      r1,|L1.240|
000080  3114              ADDS     r1,r1,#0x14
000082  8008              STRH     r0,[r1,#0]
;;;53       //MODIFY_REG(I2C1->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), 180); //100
;;;54       MODIFY_REG(I2C1->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), 0x0000801E); //400
000084  1f08              SUBS     r0,r1,#4
000086  8800              LDRH     r0,[r0,#0]
000088  f64c71ff          MOV      r1,#0xcfff
00008c  4388              BICS     r0,r0,r1
00008e  f248011e          MOV      r1,#0x801e
000092  4408              ADD      r0,r0,r1
000094  4916              LDR      r1,|L1.240|
000096  3110              ADDS     r1,r1,#0x10
000098  8008              STRH     r0,[r1,#0]
;;;55       //Set the Own Address1
;;;56       MODIFY_REG(I2C1->OAR1, I2C_OAR1_ADD0 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD8_9 | I2C_OAR1_ADDMODE, I2C_OWNADDRESS1_7BIT);
00009a  4815              LDR      r0,|L1.240|
00009c  1f00              SUBS     r0,r0,#4
00009e  8800              LDRH     r0,[r0,#0]
0000a0  f24831ff          MOV      r1,#0x83ff
0000a4  4388              BICS     r0,r0,r1
0000a6  f4404080          ORR      r0,r0,#0x4000
0000aa  4911              LDR      r1,|L1.240|
0000ac  1f09              SUBS     r1,r1,#4
0000ae  8008              STRH     r0,[r1,#0]
;;;57       //Configure I2C1 peripheral mode with parameter : I2C
;;;58       MODIFY_REG(I2C1->CR1, I2C_CR1_SMBUS | I2C_CR1_SMBTYPE | I2C_CR1_ENARP, I2C_MODE_I2C);
0000b0  480f              LDR      r0,|L1.240|
0000b2  380c              SUBS     r0,r0,#0xc
0000b4  8800              LDRH     r0,[r0,#0]
0000b6  f020001a          BIC      r0,r0,#0x1a
0000ba  490d              LDR      r1,|L1.240|
0000bc  390c              SUBS     r1,r1,#0xc
0000be  8008              STRH     r0,[r1,#0]
;;;59       //Enable I2C peripheral
;;;60       SET_BIT(I2C1->CR1, I2C_CR1_PE);
0000c0  4608              MOV      r0,r1
0000c2  8800              LDRH     r0,[r0,#0]
0000c4  f0400001          ORR      r0,r0,#1
0000c8  8008              STRH     r0,[r1,#0]
;;;61       //TypeAcknowledge
;;;62       MODIFY_REG(I2C1->CR1, I2C_CR1_ACK, I2C_CR1_ACK);
0000ca  4608              MOV      r0,r1
0000cc  8800              LDRH     r0,[r0,#0]
0000ce  f4406080          ORR      r0,r0,#0x400
0000d2  8008              STRH     r0,[r1,#0]
;;;63       //Set the 7bits Own Address2
;;;64       MODIFY_REG(I2C1->OAR2, I2C_OAR2_ADD2, 0);
0000d4  4806              LDR      r0,|L1.240|
0000d6  8800              LDRH     r0,[r0,#0]
0000d8  f02000fe          BIC      r0,r0,#0xfe
0000dc  4904              LDR      r1,|L1.240|
0000de  8008              STRH     r0,[r1,#0]
;;;65     }
0000e0  4770              BX       lr
;;;66     //----------------------------------------------------------
                          ENDP

0000e2  0000              DCW      0x0000
                  |L1.228|
                          DCD      0x40021000
                  |L1.232|
                          DCD      0x40010c00
                  |L1.236|
                          DCD      tmpreg1
                  |L1.240|
                          DCD      0x4000540c

                          AREA ||i.I2C_SendByteByADDR||, CODE, READONLY, ALIGN=1

                  I2C_SendByteByADDR PROC
;;;10     //------------------------------------------------
;;;11     void I2C_SendByteByADDR(I2C_TypeDef * i2c, uint8_t c,uint8_t addr)
000000  8803              LDRH     r3,[r0,#0]
;;;12     {
;;;13       //Disable Pos
;;;14       CLEAR_BIT(i2c->CR1, I2C_CR1_POS);
000002  f4236300          BIC      r3,r3,#0x800
000006  8003              STRH     r3,[r0,#0]
;;;15       MODIFY_REG(i2c->CR1, I2C_CR1_ACK, I2C_CR1_ACK);
000008  8803              LDRH     r3,[r0,#0]
00000a  f4436380          ORR      r3,r3,#0x400
00000e  8003              STRH     r3,[r0,#0]
;;;16       SET_BIT(i2c->CR1, I2C_CR1_START);
000010  8803              LDRH     r3,[r0,#0]
000012  f4437380          ORR      r3,r3,#0x100
000016  8003              STRH     r3,[r0,#0]
;;;17       while (!READ_BIT(i2c->SR1, I2C_SR1_SB)){};            
000018  bf00              NOP      
                  |L2.26|
00001a  8a83              LDRH     r3,[r0,#0x14]
00001c  f0030301          AND      r3,r3,#1
000020  2b00              CMP      r3,#0
000022  d0fa              BEQ      |L2.26|
;;;18       (void) i2c->SR1;
000024  8a83              LDRH     r3,[r0,#0x14]
;;;19       //I2C_Write_Byte(addr);
;;;20       MODIFY_REG(i2c->DR, I2C_DR_DR, addr | I2C_REQUEST_WRITE);
000026  8a03              LDRH     r3,[r0,#0x10]
000028  f02303ff          BIC      r3,r3,#0xff
00002c  4313              ORRS     r3,r3,r2
00002e  8203              STRH     r3,[r0,#0x10]
;;;21       while (!READ_BIT(i2c->SR1, I2C_SR1_ADDR)){};
000030  bf00              NOP      
                  |L2.50|
000032  8a83              LDRH     r3,[r0,#0x14]
000034  f0030302          AND      r3,r3,#2
000038  2b00              CMP      r3,#0
00003a  d0fa              BEQ      |L2.50|
;;;22       (void) i2c->SR1;
00003c  8a83              LDRH     r3,[r0,#0x14]
;;;23       (void) i2c->SR2;
00003e  8b03              LDRH     r3,[r0,#0x18]
;;;24       //I2C_Write_Byte(c);
;;;25       MODIFY_REG(i2c->DR, I2C_DR_DR,c);
000040  8a03              LDRH     r3,[r0,#0x10]
000042  f02303ff          BIC      r3,r3,#0xff
000046  430b              ORRS     r3,r3,r1
000048  8203              STRH     r3,[r0,#0x10]
;;;26       while (!READ_BIT(i2c->SR1, I2C_SR1_TXE)){};
00004a  bf00              NOP      
                  |L2.76|
00004c  8a83              LDRH     r3,[r0,#0x14]
00004e  f0030380          AND      r3,r3,#0x80
000052  2b00              CMP      r3,#0
000054  d0fa              BEQ      |L2.76|
;;;27       //I2C_StopCondition();
;;;28       SET_BIT(i2c->CR1, I2C_CR1_STOP);
000056  8803              LDRH     r3,[r0,#0]
000058  f4437300          ORR      r3,r3,#0x200
00005c  8003              STRH     r3,[r0,#0]
;;;29     }
00005e  4770              BX       lr
;;;30     //------------------------------------------------
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  tmpreg1
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "user\\src\\i2c_user.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_i2c_user_c_b8e6f3ff____REV16|
#line 208 "C:\\Arm\\Packs\\ARM\\CMSIS\\5.8.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___10_i2c_user_c_b8e6f3ff____REV16| PROC
#line 209

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_i2c_user_c_b8e6f3ff____REVSH|
#line 223
|__asm___10_i2c_user_c_b8e6f3ff____REVSH| PROC
#line 224

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_i2c_user_c_b8e6f3ff____RRX|
#line 410
|__asm___10_i2c_user_c_b8e6f3ff____RRX| PROC
#line 411

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
