; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\main.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\user\inc -I.\RTE\Device\STM32F103C8 -I.\RTE\_Target_1 -IC:\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Arm\Packs\Keil\STM32F1xx_DFP\2.4.0\Device\Include -D__UVISION_VERSION=535 -D_RTE_ -DSTM32F10X_MD -D_RTE_ --omf_browse=.\objects\main.crf user\src\main.c]
                          THUMB

                          AREA ||i.SetRCC_ClockTo72||, CODE, READONLY, ALIGN=2

                  SetRCC_ClockTo72 PROC
;;;23     //----------------------------------------------------------
;;;24     void SetRCC_ClockTo72(void)
000000  4832              LDR      r0,|L1.204|
;;;25     {
;;;26     		RCC-> CR |= RCC_CR_HSEON;
000002  6800              LDR      r0,[r0,#0]
000004  f4403080          ORR      r0,r0,#0x10000
000008  4930              LDR      r1,|L1.204|
00000a  6008              STR      r0,[r1,#0]
;;;27     		while (READ_BIT (RCC-> CR, RCC_CR_HSERDY == RESET)) {}
00000c  bf00              NOP      
                  |L1.14|
00000e  482f              LDR      r0,|L1.204|
000010  6800              LDR      r0,[r0,#0]
000012  2000              MOVS     r0,#0
000014  2800              CMP      r0,#0
000016  d1fa              BNE      |L1.14|
;;;28     		FLASH-> ACR &= ~FLASH_ACR_PRFTBE;
000018  482d              LDR      r0,|L1.208|
00001a  6800              LDR      r0,[r0,#0]
00001c  f0200010          BIC      r0,r0,#0x10
000020  492b              LDR      r1,|L1.208|
000022  6008              STR      r0,[r1,#0]
;;;29     		FLASH-> ACR |= FLASH_ACR_PRFTBE;
000024  4608              MOV      r0,r1
000026  6800              LDR      r0,[r0,#0]
000028  f0400010          ORR      r0,r0,#0x10
00002c  6008              STR      r0,[r1,#0]
;;;30     		FLASH-> ACR &= ~FLASH_ACR_LATENCY;
00002e  4608              MOV      r0,r1
000030  6800              LDR      r0,[r0,#0]
000032  f0200007          BIC      r0,r0,#7
000036  6008              STR      r0,[r1,#0]
;;;31     		FLASH-> ACR |= FLASH_ACR_LATENCY_2;
000038  4608              MOV      r0,r1
00003a  6800              LDR      r0,[r0,#0]
00003c  f0400002          ORR      r0,r0,#2
000040  6008              STR      r0,[r1,#0]
;;;32     		RCC-> CFGR &= ~RCC_CFGR_HPRE;
000042  4822              LDR      r0,|L1.204|
000044  6840              LDR      r0,[r0,#4]
000046  f02000f0          BIC      r0,r0,#0xf0
00004a  4920              LDR      r1,|L1.204|
00004c  6048              STR      r0,[r1,#4]
;;;33     		RCC-> CFGR |= RCC_CFGR_HPRE_DIV1;
00004e  4608              MOV      r0,r1
000050  6840              LDR      r0,[r0,#4]
000052  6048              STR      r0,[r1,#4]
;;;34     		RCC-> CFGR &= ~RCC_CFGR_PPRE2;
000054  4608              MOV      r0,r1
000056  6840              LDR      r0,[r0,#4]
000058  f4205060          BIC      r0,r0,#0x3800
00005c  6048              STR      r0,[r1,#4]
;;;35     		RCC-> CFGR |= RCC_CFGR_PPRE2_DIV1;
00005e  4608              MOV      r0,r1
000060  6840              LDR      r0,[r0,#4]
000062  6048              STR      r0,[r1,#4]
;;;36     		RCC-> CFGR &= ~RCC_CFGR_PPRE1;
000064  4608              MOV      r0,r1
000066  6840              LDR      r0,[r0,#4]
000068  f42060e0          BIC      r0,r0,#0x700
00006c  6048              STR      r0,[r1,#4]
;;;37     		RCC-> CFGR |= RCC_CFGR_PPRE1_DIV2;
00006e  4608              MOV      r0,r1
000070  6840              LDR      r0,[r0,#4]
000072  f4406080          ORR      r0,r0,#0x400
000076  6048              STR      r0,[r1,#4]
;;;38     		RCC-> CFGR &= (uint32_t) ((uint32_t) ~ (RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
000078  4608              MOV      r0,r1
00007a  6840              LDR      r0,[r0,#4]
00007c  f420107c          BIC      r0,r0,#0x3f0000
000080  6048              STR      r0,[r1,#4]
;;;39     		RCC-> CFGR |= (uint32_t) (RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
000082  4608              MOV      r0,r1
000084  6840              LDR      r0,[r0,#4]
000086  f44010e8          ORR      r0,r0,#0x1d0000
00008a  6048              STR      r0,[r1,#4]
;;;40     		RCC-> CR |= RCC_CR_PLLON; // Âêëþ÷àåì ÔÀÏ× (PLL)
00008c  4608              MOV      r0,r1
00008e  6800              LDR      r0,[r0,#0]
000090  f0407080          ORR      r0,r0,#0x1000000
000094  6008              STR      r0,[r1,#0]
;;;41     		while (READ_BIT (RCC-> CR, RCC_CR_PLLRDY)!= (RCC_CR_PLLRDY)) {}
000096  bf00              NOP      
                  |L1.152|
000098  480c              LDR      r0,|L1.204|
00009a  6800              LDR      r0,[r0,#0]
00009c  f0007000          AND      r0,r0,#0x2000000
0000a0  f1b07f00          CMP      r0,#0x2000000
0000a4  d1f8              BNE      |L1.152|
;;;42     		RCC-> CFGR &= ~RCC_CFGR_SW;
0000a6  4809              LDR      r0,|L1.204|
0000a8  6840              LDR      r0,[r0,#4]
0000aa  f0200003          BIC      r0,r0,#3
0000ae  4907              LDR      r1,|L1.204|
0000b0  6048              STR      r0,[r1,#4]
;;;43     		RCC-> CFGR |= RCC_CFGR_SW_PLL;
0000b2  4608              MOV      r0,r1
0000b4  6840              LDR      r0,[r0,#4]
0000b6  f0400002          ORR      r0,r0,#2
0000ba  6048              STR      r0,[r1,#4]
;;;44     		while (READ_BIT (RCC-> CFGR, RCC_CFGR_SWS)!= RCC_CFGR_SWS_PLL) {}
0000bc  bf00              NOP      
                  |L1.190|
0000be  4803              LDR      r0,|L1.204|
0000c0  6840              LDR      r0,[r0,#4]
0000c2  f000000c          AND      r0,r0,#0xc
0000c6  2808              CMP      r0,#8
0000c8  d1f9              BNE      |L1.190|
;;;45     
;;;46     }
0000ca  4770              BX       lr
;;;47     //----------------------------------------------------------
                          ENDP

                  |L1.204|
                          DCD      0x40021000
                  |L1.208|
                          DCD      0x40022000

                          AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=2

                  SysTick_Handler PROC
;;;72     //----------------------------------------------------------
;;;73     void SysTick_Handler(void)
000000  4804              LDR      r0,|L2.20|
;;;74     {
;;;75     		if(SysTick_CNT > 0)  SysTick_CNT--;
000002  6800              LDR      r0,[r0,#0]  ; SysTick_CNT
000004  b120              CBZ      r0,|L2.16|
000006  4803              LDR      r0,|L2.20|
000008  6800              LDR      r0,[r0,#0]  ; SysTick_CNT
00000a  1e40              SUBS     r0,r0,#1
00000c  4901              LDR      r1,|L2.20|
00000e  6008              STR      r0,[r1,#0]  ; SysTick_CNT
                  |L2.16|
;;;76     }
000010  4770              BX       lr
;;;77     //----------------------------------------------------------
                          ENDP

000012  0000              DCW      0x0000
                  |L2.20|
                          DCD      SysTick_CNT

                          AREA ||i.SysTick_Init||, CODE, READONLY, ALIGN=2

                  SysTick_Init PROC
;;;16     
;;;17     void SysTick_Init(void)
000000  f04f20e0          MOV      r0,#0xe000e000
;;;18     {
;;;19     		MODIFY_REG(SysTick->LOAD,SysTick_LOAD_RELOAD_Msk,Sysclock / 1000 - 1);
000004  6940              LDR      r0,[r0,#0x14]
000006  f000407f          AND      r0,r0,#0xff000000
00000a  4908              LDR      r1,|L3.44|
00000c  4308              ORRS     r0,r0,r1
00000e  f04f21e0          MOV      r1,#0xe000e000
000012  6148              STR      r0,[r1,#0x14]
;;;20     		SysTick->VAL &= SysTick_VAL_CURRENT_Msk;
000014  4608              MOV      r0,r1
000016  6980              LDR      r0,[r0,#0x18]
000018  f020407f          BIC      r0,r0,#0xff000000
00001c  6188              STR      r0,[r1,#0x18]
;;;21     		SET_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_TICKINT_Msk);
00001e  4608              MOV      r0,r1
000020  6900              LDR      r0,[r0,#0x10]
000022  f0400007          ORR      r0,r0,#7
000026  6108              STR      r0,[r1,#0x10]
;;;22     }
000028  4770              BX       lr
;;;23     //----------------------------------------------------------
                          ENDP

00002a  0000              DCW      0x0000
                  |L3.44|
                          DCD      0x0001193f

                          AREA ||i.delay_ms||, CODE, READONLY, ALIGN=2

                  delay_ms PROC
;;;9      
;;;10     void delay_ms(uint32_t ms)
000000  f04f21e0          MOV      r1,#0xe000e000
;;;11     {
;;;12     		MODIFY_REG(SysTick->VAL, SysTick_VAL_CURRENT_Msk, Sysclock / 1000 - 1);
000004  6989              LDR      r1,[r1,#0x18]
000006  f001417f          AND      r1,r1,#0xff000000
00000a  4a06              LDR      r2,|L4.36|
00000c  4311              ORRS     r1,r1,r2
00000e  f04f22e0          MOV      r2,#0xe000e000
000012  6191              STR      r1,[r2,#0x18]
;;;13     		SysTick_CNT = ms;
000014  4904              LDR      r1,|L4.40|
000016  6008              STR      r0,[r1,#0]  ; SysTick_CNT
;;;14     		while(SysTick_CNT) {}
000018  bf00              NOP      
                  |L4.26|
00001a  4903              LDR      r1,|L4.40|
00001c  6809              LDR      r1,[r1,#0]  ; SysTick_CNT
00001e  2900              CMP      r1,#0
000020  d1fb              BNE      |L4.26|
;;;15     }
000022  4770              BX       lr
;;;16     
                          ENDP

                  |L4.36|
                          DCD      0x0001193f
                  |L4.40|
                          DCD      SysTick_CNT

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  main PROC
;;;47     //----------------------------------------------------------
;;;48     int main(void)
000000  b50e              PUSH     {r1-r3,lr}
;;;49     {
;;;50     		uint16_t i;
;;;51     		char str1[10];
;;;52     		SetRCC_ClockTo72();
000002  f7fffffe          BL       SetRCC_ClockTo72
;;;53     		SysTick_Init();
000006  f7fffffe          BL       SysTick_Init
;;;54     		I2C_Init();
00000a  f7fffffe          BL       I2C_Init
;;;55     		LCD_ini();
00000e  f7fffffe          BL       LCD_ini
;;;56     		LCD_String("Hi!NR.electronics");
000012  a014              ADR      r0,|L5.100|
000014  f7fffffe          BL       LCD_String
;;;57     		LCD_SetPos(5,1);
000018  2101              MOVS     r1,#1
00001a  2005              MOVS     r0,#5
00001c  f7fffffe          BL       LCD_SetPos
;;;58     		LCD_String("String 2");
000020  a015              ADR      r0,|L5.120|
000022  f7fffffe          BL       LCD_String
;;;59     		delay_ms(2000);
000026  f44f60fa          MOV      r0,#0x7d0
00002a  f7fffffe          BL       delay_ms
;;;60     		LCD_SetPos(1,1);
00002e  2101              MOVS     r1,#1
000030  4608              MOV      r0,r1
000032  f7fffffe          BL       LCD_SetPos
;;;61     		LCD_String("            ");
000036  a013              ADR      r0,|L5.132|
000038  f7fffffe          BL       LCD_String
;;;62     
;;;63     
;;;64       while(1)
00003c  e011              B        |L5.98|
                  |L5.62|
;;;65     	{
;;;66         sprintf(str1,"%5d",i++);
00003e  4622              MOV      r2,r4
000040  1c61              ADDS     r1,r4,#1
000042  b28c              UXTH     r4,r1
000044  a113              ADR      r1,|L5.148|
000046  4668              MOV      r0,sp
000048  f7fffffe          BL       __2sprintf
;;;67         LCD_SetPos(0,1);//Ïîçèöèÿ 0 è ñòðîêà 1
00004c  2101              MOVS     r1,#1
00004e  2000              MOVS     r0,#0
000050  f7fffffe          BL       LCD_SetPos
;;;68         LCD_String(str1);//Âûâîä ñòðîêè
000054  4668              MOV      r0,sp
000056  f7fffffe          BL       LCD_String
;;;69         delay_ms(1000);
00005a  f44f707a          MOV      r0,#0x3e8
00005e  f7fffffe          BL       delay_ms
                  |L5.98|
000062  e7ec              B        |L5.62|
;;;70       }
;;;71     }
;;;72     //----------------------------------------------------------
                          ENDP

                  |L5.100|
000064  4869214e          DCB      "Hi!NR.electronics",0
000068  522e656c
00006c  65637472
000070  6f6e6963
000074  7300    
000076  00                DCB      0
000077  00                DCB      0
                  |L5.120|
000078  53747269          DCB      "String 2",0
00007c  6e672032
000080  00      
000081  00                DCB      0
000082  00                DCB      0
000083  00                DCB      0
                  |L5.132|
000084  20202020          DCB      "            ",0
000088  20202020
00008c  20202020
000090  00      
000091  00                DCB      0
000092  00                DCB      0
000093  00                DCB      0
                  |L5.148|
000094  25356400          DCB      "%5d",0

                          AREA ||.data||, DATA, ALIGN=2

                  SysTick_CNT
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "user\\src\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_05274f22____REV16|
#line 208 "C:\\Arm\\Packs\\ARM\\CMSIS\\5.8.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___6_main_c_05274f22____REV16| PROC
#line 209

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_05274f22____REVSH|
#line 223
|__asm___6_main_c_05274f22____REVSH| PROC
#line 224

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_05274f22____RRX|
#line 410
|__asm___6_main_c_05274f22____RRX| PROC
#line 411

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
